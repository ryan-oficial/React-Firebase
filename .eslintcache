[{"C:\\Users\\fic\\nyous-react-firebase\\src\\index.js":"1","C:\\Users\\fic\\nyous-react-firebase\\src\\reportWebVitals.js":"2","C:\\Users\\fic\\nyous-react-firebase\\src\\pages\\login\\index.jsx":"3","C:\\Users\\fic\\nyous-react-firebase\\src\\utils\\firebaseConfig.js":"4","C:\\Users\\fic\\nyous-react-firebase\\src\\pages\\register\\index.jsx":"5","C:\\Users\\fic\\nyous-react-firebase\\src\\pages\\eventos\\index.js":"6"},{"size":851,"mtime":1607949285632,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":2199,"mtime":1607689434552,"results":"10","hashOfConfig":"8"},{"size":508,"mtime":1608032122339,"results":"11","hashOfConfig":"8"},{"size":2220,"mtime":1607688566909,"results":"12","hashOfConfig":"8"},{"size":9919,"mtime":1608032842142,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1g56dsd",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},"C:\\Users\\fic\\nyous-react-firebase\\src\\index.js",["30","31","32"],"import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport EventosPage from '../src/pages/eventos'\nimport reportWebVitals from './reportWebVitals';\n\nimport {FirebaseAppProvider} from 'reactfire';\nimport firebaseConfig from './utils/firebaseConfig';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n    <EventosPage />\n    </FirebaseAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["33","34"],"C:\\Users\\fic\\nyous-react-firebase\\src\\reportWebVitals.js",[],"C:\\Users\\fic\\nyous-react-firebase\\src\\pages\\login\\index.jsx",[],"C:\\Users\\fic\\nyous-react-firebase\\src\\utils\\firebaseConfig.js",[],"C:\\Users\\fic\\nyous-react-firebase\\src\\pages\\register\\index.jsx",[],["35","36"],"C:\\Users\\fic\\nyous-react-firebase\\src\\pages\\eventos\\index.js",["37","38","39","40","41"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button,Container, Row, Cal, Card, Form} from 'react-bootstrap';\r\nimport { db, storage } from '../../utils/firebaseConfig';\r\nimport FileUploader from 'react-firebase-file-uploader';\r\n\r\nconst EventosPage = () => {\r\n    const [id, setId] = useState(0);\r\n    const [nome, setNome] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [urlImagem, setUrlImagem] = useState('');\r\n\r\n    const [eventos, setEventos] = useState([]);\r\n\r\n\r\n    const _dbEventos = db.collection('eventos');\r\n\r\n    useEffect(() => {\r\n        listarEventos();\r\n    }, [])\r\n\r\n    const listarEventos = () => {\r\n        try {\r\n            db.collection('eventos')\r\n            .get()\r\n            .then(result => {\r\n                // console.log('Collection Eventos', result.docs);\r\n                const data = result.docs.map(doc =>{\r\n                    return {\r\n                        id : doc.id,\r\n                        nome : doc.data().nome,\r\n                        descricao : doc.data().descricao\r\n                }\r\n                });\r\n                setEventos(data)\r\n            })\r\n            .catch(error => console.error(error));\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const editar = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            // db.collection('eventos')\r\n            _dbEventos.doc(event.target.value)\r\n            .get()\r\n            .then(result => {\r\n                setId(result.id);\r\n                setNome(result.data().nome);\r\n                setDescricao(result.data().descricao);\r\n            })\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n    const remover = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            \r\n                _dbEventos.doc(event.target.value)\r\n                .delete()\r\n                .then(() => {\r\n                    alert('Evento removido')\r\n                    listarEventos();\r\n                    limparCampos();\r\n                })\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    const salvar = (event) => {\r\n        event.preventDefault();\r\n\r\n       try {\r\n        const evento = {\r\n            nome : nome,\r\n            descricao : descricao,\r\n        }\r\n        if(id === 0){\r\n            db.collection('eventos')\r\n            .add(evento)\r\n            .then(() => {\r\n                alert('Evento cadastrado')\r\n                listarEventos();\r\n                limparCampos();\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            })\r\n        }else{\r\n            db.collection('eventos')\r\n            .doc(id)\r\n            .set(evento)\r\n            .then(() => {\r\n                alert('Evento alterado')\r\n                listarEventos();\r\n                limparCampos();\r\n            })\r\n        }\r\n\r\n        console.log('Dados ${nome} ${descricao}')\r\n       } catch (error) {\r\n           console.error(error)\r\n       }\r\n    }\r\n\r\n    const limparCampos = () => {\r\n        setId(0);\r\n            setNome('');\r\n            // setUrlImagem('');\r\n            // setLink('');\r\n            // setCategoriaId('');\r\n            setDescricao('');\r\n    }\r\n\r\n    const handleUploadError = error =>{\r\n        console.error(error);\r\n    }\r\n \r\n    const handleUploadSuccess = filename => {\r\n        console.log('Sucesso upload: '+ filename)\r\n    }\r\n    return(\r\n        <div>\r\n            <Container>\r\n\r\n                <h1>Eventos</h1>\r\n                <p>Gerencie seus eventos</p>\r\n                {/* <Titulo titulo=\"Eventos\" chamada=\"Gerencie seus eventos\" /> */}\r\n                \r\n                <Card>\r\n                        <Card.Body>\r\n                            \r\n                            <Form onSubmit={event => salvar(event)}>\r\n                              <Form.Group>\r\n                                  {urlImagem && <img src={urlImagem} style={{width : '200px'}}/>}\r\n                                    <FileUploader\r\n                                        accept=\"image/s\"\r\n                                        name=\"urlImagem\"\r\n                                        storageRef={storage.ref('imagens')}\r\n                                        onUploadError={handleUploadError}\r\n                                        onUploadSuccess={handleUploadSuccess}\r\n                                    />\r\n                              </Form.Group>\r\n                                <Form.Group controlId=\"formNome\">\r\n                                    <Form.Label>Nome</Form.Label>\r\n                                    <Form.Control type=\"text\" value={nome} onChange={event => setNome(event.target.value)}/>\r\n                                </Form.Group>\r\n                                \r\n                                {/* <Form.Group controlId=\"formLink\">\r\n                                    <Form.Label>Link</Form.Label>\r\n                                    <Form.Control type=\"text\" value={Link} onChange={event => setLink(event.target.value)} placeholder=\"http://\"/>\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group controlId=\"fromImagem\">\r\n                                    <Form.File id=\"fileEvento\" label=\"Imagem do evento\" onChange={event => uploadFile(event)} />\r\n                                    {urlImagem && <img src={urlImagem} style={{ width : '160px'}}/>}\r\n                                </Form.Group> */}\r\n\r\n                                <Form.Group controlId=\"formDescricao\">\r\n                                    <Form.Label>Descri√ßao</Form.Label>\r\n                                    <Form.Control type=\"text\" value={descricao} onChange={event => setDescricao(event.target.value)}/>\r\n                                </Form.Group>\r\n\r\n                                {/* <Form.Group controlId=\"formCategoria\">\r\n                                    <Form.Label>Categoria</Form.Label>\r\n                                    <Form.Control as=\"select\" value={categoriaId} onChange={event => setCategoriaId(event.target.value)}>\r\n                                        <option value={0}>Selecione</option>\r\n                                            {\r\n                                                categorias.map((item, index) => {\r\n                                                    return(\r\n                                                        <option key={index} value={item.id}></option>\r\n                                                        )\r\n                                                    })\r\n                                           }    \r\n                                     </Form.Control>                         \r\n                                </Form.Group> */}\r\n\r\n                                <Button type=\"submit\" >Salvar</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                                           <Card.Body>\r\n                                               <Table bordered>\r\n                                                   <thead>\r\n                                                       <tr>\r\n                                                           {/* <th>Imagem</th> */}\r\n                                                           <th>Nome</th>\r\n                                                           {/* <th>Link</th> */}\r\n                                                           <th>Descri√ß√£o</th>\r\n                                                           {/* <th>Categoria</th>\r\n                                                           <th>A√ßoes</th> */}\r\n                                                       </tr>\r\n                                                   </thead>\r\n                                                   <tbody>\r\n                                                       { eventos && \r\n                                                       eventos.map((item, index) =>{\r\n                                                           return(\r\n                                                               <tr key={index}>\r\n                                                                   {/* <td><img src={item.urlImagem} style={{ width : '120px'}}></img></td> */}\r\n                                                                   <td>{item.nome}</td>\r\n                                                                   {/* <td><a href={item.link} target=\"_blank\">Ir para o Evento</a></td> */}\r\n                                                                   <td>{item.descricao}</td>\r\n                                                                   {/* <td>{item.categoria.nome}</td> */}\r\n                                                                   <td>\r\n                                                                       <Button type=\"button\" variant=\"warning\" value={item.id} onClick={ event => editar(event)}>Editar</Button>\r\n                                                                       <Button type=\"button\" variant=\"danger\" value={item.id} style={{ marginleft : '30px'}} onClick={ event => remover(event)}>Remover</Button>\r\n                                                                   </td>\r\n                                                                   </tr>\r\n                                                           )\r\n                                                       })\r\n                                                       }\r\n                                                   </tbody>\r\n                                               </Table>\r\n                                           </Card.Body>\r\n\r\n                </Card>\r\n            </Container>\r\n  </div>\r\n  \r\n    )\r\n}\r\n\r\nexport default EventosPage;",{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":13},{"ruleId":"42","severity":1,"message":"47","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":16},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"42","severity":1,"message":"54","line":2,"column":35,"nodeType":"44","messageId":"45","endLine":2,"endColumn":38},{"ruleId":"42","severity":1,"message":"55","line":2,"column":40,"nodeType":"44","messageId":"45","endLine":2,"endColumn":43},{"ruleId":"42","severity":1,"message":"56","line":10,"column":23,"nodeType":"44","messageId":"45","endLine":10,"endColumn":35},{"ruleId":"57","severity":1,"message":"58","line":103,"column":21,"nodeType":"59","messageId":"60","endLine":103,"endColumn":49},{"ruleId":"61","severity":1,"message":"62","line":138,"column":49,"nodeType":"63","endLine":138,"endColumn":97},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Register' is defined but never used.","no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"'Row' is defined but never used.","'Cal' is defined but never used.","'setUrlImagem' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]